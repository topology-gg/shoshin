import { QueryClient } from '@tanstack/react-query';
import React from 'react';
import { ProviderInterface } from 'starknet';
import { Connector } from '../connectors';
/** State of the StarkNet context. */
export interface StarknetState {
    /**
     * Connected account address.
     *
     * @deprecated Use `useAccount`.
     */
    account?: string;
    /**
     * Connect the given connector.
     *
     * @deprecated Use `useConnectors`.
     */
    connect: (connector: Connector) => void;
    /**
     * Disconnect the currently connected connector.
     *
     * @deprecated Use `useConnectors`.
     */
    disconnect: () => void;
    /** List of registered connectors.
     *
     * @deprecated Use `useConnectors`.
     */
    connectors: Connector[];
    /** Current provider. */
    library: ProviderInterface;
    /** Error. */
    error?: Error;
}
/**
 * Returns the current StarkNet context state.
 *
 * @remarks
 *
 * This hook should be used sparingly and will be deprecated.
 *
 * Use the following hooks:
 *
 *  - `account`: `useAccount`
 *  - `connect`, `disconnect`, `connectors`: `useConnectors`
 *
 * @example
 * This example shows how to access the StarkNet provider.
 * ```tsx
 * function Component() {
 *   const { library } = useStarknet()
 *
 *   if (!library.provider) return <span>Account URL: {library.baseUrl}</span>
 *   return <span>Provider URL: {library.provider.baseUrl}</span>
 * }
 * ```
 */
export declare function useStarknet(): StarknetState;
/** Arguments for `StarknetProvider`. */
export interface StarknetProviderProps {
    /** Application. */
    children?: React.ReactNode;
    /** Default provider, used when the user is not connected. */
    defaultProvider?: ProviderInterface;
    /** List of connectors to use. */
    connectors?: Connector[];
    /** Connect the first available connector on page load. */
    autoConnect?: boolean;
    /** Low-level react-query client to use. */
    queryClient?: QueryClient;
}
/** Root StarkNet context provider. */
export declare function StarknetProvider({ children, defaultProvider, connectors, autoConnect, queryClient, }: StarknetProviderProps): JSX.Element;
